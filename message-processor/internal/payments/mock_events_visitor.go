// Code generated by mockery v2.14.0. DO NOT EDIT.

package payments

import mock "github.com/stretchr/testify/mock"

// MockEventsVisitor is an autogenerated mock type for the EventsVisitor type
type MockEventsVisitor struct {
	mock.Mock
}

type MockEventsVisitor_Expecter struct {
	mock *mock.Mock
}

func (_m *MockEventsVisitor) EXPECT() *MockEventsVisitor_Expecter {
	return &MockEventsVisitor_Expecter{mock: &_m.Mock}
}

// VisitWithdrawalCreated provides a mock function with given fields: withdrawalCreated
func (_m *MockEventsVisitor) VisitWithdrawalCreated(withdrawalCreated WithdrawalCreated) error {
	ret := _m.Called(withdrawalCreated)

	var r0 error
	if rf, ok := ret.Get(0).(func(WithdrawalCreated) error); ok {
		r0 = rf(withdrawalCreated)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockEventsVisitor_VisitWithdrawalCreated_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'VisitWithdrawalCreated'
type MockEventsVisitor_VisitWithdrawalCreated_Call struct {
	*mock.Call
}

// VisitWithdrawalCreated is a helper method to define mock.On call
//  - withdrawalCreated WithdrawalCreated
func (_e *MockEventsVisitor_Expecter) VisitWithdrawalCreated(withdrawalCreated interface{}) *MockEventsVisitor_VisitWithdrawalCreated_Call {
	return &MockEventsVisitor_VisitWithdrawalCreated_Call{Call: _e.mock.On("VisitWithdrawalCreated", withdrawalCreated)}
}

func (_c *MockEventsVisitor_VisitWithdrawalCreated_Call) Run(run func(withdrawalCreated WithdrawalCreated)) *MockEventsVisitor_VisitWithdrawalCreated_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(WithdrawalCreated))
	})
	return _c
}

func (_c *MockEventsVisitor_VisitWithdrawalCreated_Call) Return(_a0 error) *MockEventsVisitor_VisitWithdrawalCreated_Call {
	_c.Call.Return(_a0)
	return _c
}

type mockConstructorTestingTNewMockEventsVisitor interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockEventsVisitor creates a new instance of MockEventsVisitor. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockEventsVisitor(t mockConstructorTestingTNewMockEventsVisitor) *MockEventsVisitor {
	mock := &MockEventsVisitor{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
