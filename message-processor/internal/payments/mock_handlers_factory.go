// Code generated by mockery v2.14.0. DO NOT EDIT.

package payments

import mock "github.com/stretchr/testify/mock"

// MockHandlersFactory is an autogenerated mock type for the HandlersFactory type
type MockHandlersFactory struct {
	mock.Mock
}

type MockHandlersFactory_Expecter struct {
	mock *mock.Mock
}

func (_m *MockHandlersFactory) EXPECT() *MockHandlersFactory_Expecter {
	return &MockHandlersFactory_Expecter{mock: &_m.Mock}
}

// CreateWithdrawalCreatedHandler provides a mock function with given fields:
func (_m *MockHandlersFactory) CreateWithdrawalCreatedHandler() WithdrawalCreatedHandler {
	ret := _m.Called()

	var r0 WithdrawalCreatedHandler
	if rf, ok := ret.Get(0).(func() WithdrawalCreatedHandler); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(WithdrawalCreatedHandler)
		}
	}

	return r0
}

// MockHandlersFactory_CreateWithdrawalCreatedHandler_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateWithdrawalCreatedHandler'
type MockHandlersFactory_CreateWithdrawalCreatedHandler_Call struct {
	*mock.Call
}

// CreateWithdrawalCreatedHandler is a helper method to define mock.On call
func (_e *MockHandlersFactory_Expecter) CreateWithdrawalCreatedHandler() *MockHandlersFactory_CreateWithdrawalCreatedHandler_Call {
	return &MockHandlersFactory_CreateWithdrawalCreatedHandler_Call{Call: _e.mock.On("CreateWithdrawalCreatedHandler")}
}

func (_c *MockHandlersFactory_CreateWithdrawalCreatedHandler_Call) Run(run func()) *MockHandlersFactory_CreateWithdrawalCreatedHandler_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockHandlersFactory_CreateWithdrawalCreatedHandler_Call) Return(_a0 WithdrawalCreatedHandler) *MockHandlersFactory_CreateWithdrawalCreatedHandler_Call {
	_c.Call.Return(_a0)
	return _c
}

type mockConstructorTestingTNewMockHandlersFactory interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockHandlersFactory creates a new instance of MockHandlersFactory. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockHandlersFactory(t mockConstructorTestingTNewMockHandlersFactory) *MockHandlersFactory {
	mock := &MockHandlersFactory{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
