// Code generated by mockery v2.14.0. DO NOT EDIT.

package main

import mock "github.com/stretchr/testify/mock"

// MockWithdrawalCreatedHandler is an autogenerated mock type for the WithdrawalCreatedHandler type
type MockWithdrawalCreatedHandler struct {
	mock.Mock
}

type MockWithdrawalCreatedHandler_Expecter struct {
	mock *mock.Mock
}

func (_m *MockWithdrawalCreatedHandler) EXPECT() *MockWithdrawalCreatedHandler_Expecter {
	return &MockWithdrawalCreatedHandler_Expecter{mock: &_m.Mock}
}

// HandleWithdrawalCreated provides a mock function with given fields: withdrawalCreated
func (_m *MockWithdrawalCreatedHandler) HandleWithdrawalCreated(withdrawalCreated WithdrawalCreated) error {
	ret := _m.Called(withdrawalCreated)

	var r0 error
	if rf, ok := ret.Get(0).(func(WithdrawalCreated) error); ok {
		r0 = rf(withdrawalCreated)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockWithdrawalCreatedHandler_HandleWithdrawalCreated_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'HandleWithdrawalCreated'
type MockWithdrawalCreatedHandler_HandleWithdrawalCreated_Call struct {
	*mock.Call
}

// HandleWithdrawalCreated is a helper method to define mock.On call
//  - withdrawalCreated WithdrawalCreated
func (_e *MockWithdrawalCreatedHandler_Expecter) HandleWithdrawalCreated(withdrawalCreated interface{}) *MockWithdrawalCreatedHandler_HandleWithdrawalCreated_Call {
	return &MockWithdrawalCreatedHandler_HandleWithdrawalCreated_Call{Call: _e.mock.On("HandleWithdrawalCreated", withdrawalCreated)}
}

func (_c *MockWithdrawalCreatedHandler_HandleWithdrawalCreated_Call) Run(run func(withdrawalCreated WithdrawalCreated)) *MockWithdrawalCreatedHandler_HandleWithdrawalCreated_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(WithdrawalCreated))
	})
	return _c
}

func (_c *MockWithdrawalCreatedHandler_HandleWithdrawalCreated_Call) Return(_a0 error) *MockWithdrawalCreatedHandler_HandleWithdrawalCreated_Call {
	_c.Call.Return(_a0)
	return _c
}

type mockConstructorTestingTNewMockWithdrawalCreatedHandler interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockWithdrawalCreatedHandler creates a new instance of MockWithdrawalCreatedHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockWithdrawalCreatedHandler(t mockConstructorTestingTNewMockWithdrawalCreatedHandler) *MockWithdrawalCreatedHandler {
	mock := &MockWithdrawalCreatedHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
